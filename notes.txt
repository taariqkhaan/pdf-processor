write a program using C#, .NET 8.0.
accepts a pdf file and output folder path as parameter
look for a data.db in the same folder as the pdf file.
looks for table called "pdf_table" inside the database.
contains bottom-left coordinate in X1, Y1 columns.
contains top-right coordinate in X2, Y2 columns.
above coordinates were extracted using PDFpig.
SheetNumber column contains the pdf page number.
sort the table by SheetNumber ascending, ItemNumber ascending, Type alphabetical.

go row-by-row in Type Column
if value is "from_desc" then place a red dot at the corresponding bottom-left and top-right coordinates.
if null, continue.
save the highlighted pdf in the output folder as highlighted_pdf.pdf
use PdfSharp + MigraDoc for annotation. 
Take into account any difference in coordinate systems.


namespace PdfProcessor.Services
{
    public class MissingInfoService
    {
        //put logic in a method here
    }
}

Console.WriteLine($"Page {pageIndex} rotation: {page.Rotation}");
Console.WriteLine($"{wordY1}, {word.Text}, {pageNumber}");
Console.WriteLine($"{}");

'cable_tag'
'from_desc'
'to_desc'
'function'
'size'
'insulation'
'from_ref'
'to_ref'
'voltage'
'conductors'
'length'


write a program using C#, .NET 8.0.

namespace PdfProcessor.Services
{
    public class MissingInfoService
    {
        //put logic in a method here
    }
}

accepts a .db filepath as parameter.
it has a table called pdf_table.
with columns: Text, X1, Y1, X2, Y2, TextRotation, SheetNumber, Type and ItemNUmber.
sort table by ascending SheetNumber, then ascending ItemNumber.

search the Type column and check if there is atleast one instance of the following texts, per unique ItemNumber in a unique SheetNumber.
'cable_tag'
'from_desc'
'to_desc'
'function'
'size'
'insulation'
'from_ref'
'to_ref'
'voltage'
'conductors'
'length'

i.e. each one of the above text should appear at least one in the Type column for SheetNumber 1 and ItemNumber 1,
then  each one of the above text should appear at least one in the Type column for SheetNumber 1 and ItemNumber 2 and so on.
if a text is not found in the Type column, create a row at the end with the Type, SheetNumber and ItemNumber.


Y1_start_line1 = 492
Y1_start_line2 = 480

Y1=Y1_start_line1-(30*(ItemNUmber - 1)) , Y2 = Y1+5.77 will be the common to the following:
'cable_tag' is missing --> X1 = 23, X2 = X1+40
'from_desc' is missing--> X1 = 137, X2 = X1+40,
'to_desc' is missing--> X1 = 275, X2 = X1+40,
'function' is missing--> X1 = 416, X2 = X1+40,
'size' is missing--> X1 = 539, X2 = X1+20,
'insulation' is missing--> X1 = 593, X2 = X1+40,


Y1=Y1_start_line2-(30*(ItemNUmber - 1)) , Y2 = Y1+5.77 will be the common to the following:

'from_ref' is missing--> X1 = 137, X2 = X1+40,
'to_ref' is missing--> X1 = 275, X2 = X1+40,
'voltage' is missing--> X1 = 452, X2 = X1+40,
'conductors' is missing--> X1 = 525, X2 = X1+20,
'length' is missing--> X1 = 583, X2 = X1+20,


('cable_tag','from_desc','to_desc','function','size','insulation','from_ref','to_ref','voltage','conductors','length')































